preset: conventionalcommits
branches:
  - name: master
  - name: main
  - name: rc
    prerelease: true
plugins:
  - "@semantic-release/commit-analyzer"
  # Build the binaries
  - - "@semantic-release/exec"
    # We use generateNotesCmd instead of a different step because it has access
    # to last/nextRelease due to when the step runs.
    - generateNotesCmd: "make release APP_VERSION=${nextRelease.version}"

  # This creates fancy release notes in our Github release
  - "@semantic-release/release-notes-generator"
  # Create the Github Release
  - - "@semantic-release/github"
    - assets:
        - "dist/*.tar.gz"
        - "dist/checksums.txt"
        ### Deviation(brewfile): We need to include a file.
        - "Brewfile"

  # Build and push our docker image
  - - "@semantic-release/exec"
    # Again using this just to get it to run on dryrun because `prepare` is skipped
    - generateNotesCmd: "make docker-build-override APP_VERSION=${nextRelease.version} >&2"
  - - "@semantic-release/exec"
    - publishCmd: "make docker-push-override APP_VERSION=${nextRelease.version} >&2"
